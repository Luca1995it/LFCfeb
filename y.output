Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | /* empty */

    4 stmt: ';'
    5     | '<' VARIABLE '>' ';'
    6     | expr ';'
    7     | PRINT expr ';'
    8     | VARIABLE '=' expr ';'
    9     | WHILE '(' expr ')' stmt
   10     | IF '(' expr ')' stmt
   11     | IF '(' expr ')' stmt ELSE stmt
   12     | '{' stmt_list '}'
   13     | VARIABLE '=' '@' VARIABLE ';'

   14 stmt_list: stmt
   15          | stmt_list stmt

   16 expr: INTEGER
   17     | VARIABLE
   18     | '<' VARIABLE '>'
   19     | '-' expr
   20     | expr '+' expr
   21     | expr '-' expr
   22     | expr '*' expr
   23     | expr '/' expr
   24     | expr '<' expr
   25     | expr '>' expr
   26     | expr GE expr
   27     | expr LE expr
   28     | expr NE expr
   29     | expr EQ expr
   30     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 11 30
')' (41) 9 10 11 30
'*' (42) 22
'+' (43) 20
'-' (45) 19 21
'/' (47) 23
';' (59) 4 5 6 7 8 13
'<' (60) 5 18 24
'=' (61) 8 13
'>' (62) 5 18 25
'@' (64) 13
'{' (123) 12
'}' (125) 12
error (256)
INTEGER (258) 16
VARIABLE (259) 5 8 13 17 18
WHILE (260) 9
IF (261) 10 11
PRINT (262) 7
IFX (263)
ELSE (264) 11
NE (265) 28
EQ (266) 29
LE (267) 27
GE (268) 26
UMINUS (269)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1, on right: 0
function (30)
    on left: 2 3, on right: 1 2
stmt (31)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 9 10 11 14 15
stmt_list (32)
    on left: 14 15, on right: 12 15
expr (33)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30,
    on right: 6 7 8 9 10 11 19 20 21 22 23 24 25 26 27 28 29 30


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: function .
    2 function: function . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    '<'       shift, and go to state 9
    ';'       shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    $default  reduce using rule 1 (program)

    stmt  go to state 14
    expr  go to state 15


state 3

    0 $accept: program $end .

    $default  accept


state 4

   16 expr: INTEGER .

    $default  reduce using rule 16 (expr)


state 5

    8 stmt: VARIABLE . '=' expr ';'
   13     | VARIABLE . '=' '@' VARIABLE ';'
   17 expr: VARIABLE .

    '='  shift, and go to state 16

    $default  reduce using rule 17 (expr)


state 6

    9 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 17


state 7

   10 stmt: IF . '(' expr ')' stmt
   11     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 18


state 8

    7 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 21


state 9

    5 stmt: '<' . VARIABLE '>' ';'
   18 expr: '<' . VARIABLE '>'

    VARIABLE  shift, and go to state 22


state 10

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


state 11

   19 expr: '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 23


state 12

   30 expr: '(' . expr ')'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 24


state 13

   12 stmt: '{' . stmt_list '}'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    '<'       shift, and go to state 9
    ';'       shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt       go to state 25
    stmt_list  go to state 26
    expr       go to state 15


state 14

    2 function: function stmt .

    $default  reduce using rule 2 (function)


state 15

    6 stmt: expr . ';'
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    ';'  shift, and go to state 29
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37


state 16

    8 stmt: VARIABLE '=' . expr ';'
   13     | VARIABLE '=' . '@' VARIABLE ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    '@'       shift, and go to state 38

    expr  go to state 39


state 17

    9 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 40


state 18

   10 stmt: IF '(' . expr ')' stmt
   11     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 41


state 19

   17 expr: VARIABLE .

    $default  reduce using rule 17 (expr)


state 20

   18 expr: '<' . VARIABLE '>'

    VARIABLE  shift, and go to state 42


state 21

    7 stmt: PRINT expr . ';'
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    ';'  shift, and go to state 43
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37


state 22

    5 stmt: '<' VARIABLE . '>' ';'
   18 expr: '<' VARIABLE . '>'

    '>'  shift, and go to state 44


state 23

   19 expr: '-' expr .
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    $default  reduce using rule 19 (expr)


state 24

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | '(' expr . ')'

    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ')'  shift, and go to state 45


state 25

   14 stmt_list: stmt .

    $default  reduce using rule 14 (stmt_list)


state 26

   12 stmt: '{' stmt_list . '}'
   15 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    '<'       shift, and go to state 9
    ';'       shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13
    '}'       shift, and go to state 46

    stmt  go to state 47
    expr  go to state 15


state 27

   25 expr: expr '>' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 48


state 28

   24 expr: expr '<' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 49


state 29

    6 stmt: expr ';' .

    $default  reduce using rule 6 (stmt)


state 30

   28 expr: expr NE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 50


state 31

   29 expr: expr EQ . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 51


state 32

   27 expr: expr LE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 52


state 33

   26 expr: expr GE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 53


state 34

   20 expr: expr '+' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 54


state 35

   21 expr: expr '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 55


state 36

   22 expr: expr '*' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 56


state 37

   23 expr: expr '/' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '<'       shift, and go to state 20
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 57


state 38

   13 stmt: VARIABLE '=' '@' . VARIABLE ';'

    VARIABLE  shift, and go to state 58


state 39

    8 stmt: VARIABLE '=' expr . ';'
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    ';'  shift, and go to state 59
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37


state 40

    9 stmt: WHILE '(' expr . ')' stmt
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ')'  shift, and go to state 60


state 41

   10 stmt: IF '(' expr . ')' stmt
   11     | IF '(' expr . ')' stmt ELSE stmt
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    NE   shift, and go to state 30
    EQ   shift, and go to state 31
    LE   shift, and go to state 32
    GE   shift, and go to state 33
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    ')'  shift, and go to state 61


state 42

   18 expr: '<' VARIABLE . '>'

    '>'  shift, and go to state 62


state 43

    7 stmt: PRINT expr ';' .

    $default  reduce using rule 7 (stmt)


state 44

    5 stmt: '<' VARIABLE '>' . ';'
   18 expr: '<' VARIABLE '>' .

    $default  reduce using rule 18 (expr)


state 45

   30 expr: '(' expr ')' .

    $default  reduce using rule 30 (expr)


state 46

   12 stmt: '{' stmt_list '}' .

    $default  reduce using rule 12 (stmt)


state 47

   15 stmt_list: stmt_list stmt .

    $default  reduce using rule 15 (stmt_list)


state 48

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   25     | expr '>' expr .
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 25 (expr)


state 49

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   24     | expr '<' expr .
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 24 (expr)


state 50

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   28     | expr NE expr .
   29     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 28 (expr)


state 51

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   29     | expr EQ expr .

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 29 (expr)


state 52

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   27     | expr LE expr .
   28     | expr . NE expr
   29     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 27 (expr)


state 53

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   26     | expr GE expr .
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 26 (expr)


state 54

   20 expr: expr . '+' expr
   20     | expr '+' expr .
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 20 (expr)


state 55

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   21     | expr '-' expr .
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 21 (expr)


state 56

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   22     | expr '*' expr .
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    $default  reduce using rule 22 (expr)


state 57

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   23     | expr '/' expr .
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    $default  reduce using rule 23 (expr)


state 58

   13 stmt: VARIABLE '=' '@' VARIABLE . ';'

    ';'  shift, and go to state 64


state 59

    8 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 8 (stmt)


state 60

    9 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    '<'       shift, and go to state 9
    ';'       shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 65
    expr  go to state 15


state 61

   10 stmt: IF '(' expr ')' . stmt
   11     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    '<'       shift, and go to state 9
    ';'       shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 66
    expr  go to state 15


state 62

   18 expr: '<' VARIABLE '>' .

    $default  reduce using rule 18 (expr)


state 63

    5 stmt: '<' VARIABLE '>' ';' .

    $default  reduce using rule 5 (stmt)


state 64

   13 stmt: VARIABLE '=' '@' VARIABLE ';' .

    $default  reduce using rule 13 (stmt)


state 65

    9 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 9 (stmt)


state 66

   10 stmt: IF '(' expr ')' stmt .
   11     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 67

    $default  reduce using rule 10 (stmt)


state 67

   11 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    '<'       shift, and go to state 9
    ';'       shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 68
    expr  go to state 15


state 68

   11 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)
